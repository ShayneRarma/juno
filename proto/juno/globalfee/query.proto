syntax = "proto3";

package juno.globalfee;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";

import "juno/globalfee/whitelist.proto";

option go_package = "github.com/CosmosContracts/juno/x/globalfee/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the globalfee module.
  rpc MinimumGasPrices(QueryMinimumGasPricesRequest)
      returns (QueryMinimumGasPricesResponse) {
    option (google.api.http).get = "/juno/globalfee/minimum_gas_prices";
  }
  // returns addresses which can override the global fee in case of an attack
  rpc WhiteList(QueryWhiteListRequest) returns (QueryWhiteListResponse) {
    option (google.api.http).get = "/juno/globalfee/whitelist";
  }
}
// TODO:
message QueryWhiteListRequest {}
// TODO:
message QueryWhiteListResponse {
  repeated AccountRecord account_record = 1 [ (gogoproto.nullable) = false ];
}

// QueryMinimumGasPricesRequest is the request type for the
// Query/MinimumGasPrices RPC method.
message QueryMinimumGasPricesRequest {}

// QueryMinimumGasPricesResponse is the response type for the
// Query/MinimumGasPrices RPC method.
message QueryMinimumGasPricesResponse {
  repeated cosmos.base.v1beta1.DecCoin minimum_gas_prices = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "minimum_gas_prices,omitempty",
    (gogoproto.moretags) = "yaml:\"minimum_gas_prices\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"
  ];
}